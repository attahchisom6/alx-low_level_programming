vi trapj
bash trapj
vi trapj
bash trapj
vi trapj
bash trapj
vi trapj
bash trapj
ls -l |grep trap
vi somefilekill %1
ls
shopt -s extglob
ls (*.){sh,txt}
ls .{sh,txt}
ls ?.sh
v=5
declare -n ref=v
echo ${!ref}
echo $ref
declare -n p=5
declare -n p=no
p=6
echo ${!p}
vi nref.sh
bash nref.sh
vi nref.sh
bash nref.sh
cat -n nref.sh
vi nref.sh
bash nref.sh
vi nref.sh
bash nref.sh
vi nref.sh
bash nref.sh
vi nref.sh
bash nref.sh
vi nref.sh
bash nref.sh
local -n=55
declare -n ref=house
house=bungalow
echo "changing ${!ref}
"
echo "changing $ref"
b=a
a=orange
echo ${!b}
declare -n ref=house
ref=apple
echo ${!ref}
clear
dvi rect
clear
declare -a arr=(1 w 5)
echo attribute: ${arr@?}
echo attribute: ${arr@a}
echo attribute: ${arr@A}
echo attribute: ${arr@P}
echo attribute: ${arr@Q}
echo attribute: ${arr@E}
clear
bash stat.sh
source stat.sh
clear
grep '^p' chessboard
egrep '^p' chessboard
grep '^(p)' chessboard
grep '^e' chessboard
egrep '^e' chessboard
egrep '^(echo)' chessboard
pkg install at
apt install at
at -v
echo "somecommand > out.txt 2> error.txt &" | at 10pm
atq
systemd
cd ../
cd /etc/systemd
cd usr/etc/systemd
cd usr/etc
ls
cat termux-login.sh
cd
clear
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 12 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[33mits not lunch time\033[0m"; fi; }
export PROMPT_COMMAND=lunchbreak

cd termux-key
clear
vi ~/.bashrc
clear
soure ~/.bashrc
source ~/.bashrc
vi ~/.bashrc
source ~/.bashrc
-b LIST
clear
echo {1,2..}
echo {1..4}
echo {1 2 ..}
echo ${1 2 ..}
echo {1,3..8}
echo {1 3..8}
clear
arr=(1 2 3 4 5 6 7)
echo ${arr[@[} | rev
ls
ls -a
cd .termux
source stat.sh
cd
source stat.sh
clear
cd .termux
ls
cd termux.properties
cat termux.properties
vi termux.properties
3
history

lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 12 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[33mits not lunch time\033[0m"; fi; }
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 12 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[33mits not lunch ti7me\033[0m"; fi; } 
cd
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 12 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[33mits not lunch ti7me\033[0m"; fi; } 
export lunchbreak
export PROPMT_COMMAND=lunchbreak
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[33mits not lunch ti7me\033[0m"; fi; } 
export PROMPT_COMMAND=lunchbreak
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[33mits not lunch time\033[0m"; fi; } 
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[5;33mits not lunch time\033[0m"; fi; } 
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[1;33mits not lunch time\033[0m"; fi; } 
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[2;33mits not lunch time\033[0m"; fi; } 
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[3;33mits not lunch time\033[0m"; fi; } 
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[4;33mits not lunch time\033[0m"; fi; } 
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[7;33mits not lunch time\033[0m"; fi; } 
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[6;33mits not lunch time\033[0m"; fi; } 
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[8;33mits not lunch time\033[0m"; fi; } 
lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[5;33mits not lunch time\033[0m"; fi; } 
clear
echo "lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[5;33mits not lunch time\033[0m"; fi; }" > lubrk.sh
echo 'lunchbreak(){ if (( $(date +%H) == 12 && $(date +%M) < 59 )); then printf "\033[5;31mwonserful, its lunch time\033[0m"; else printf "\033[5;33mits not lunch time\033[0m"; fi; }' > lubrk.sh
bash lubrk.sh
vi lubrk.sh
bash lubrk.sh
echo $(date +%H)
cut -d, -f1 <<< "a, b, c, d, e"
cut -d, -f1,3 <<< "a, b, c, d, e"
cut -d, -f1,3 <<< "a,, b, c, d, e"
vi lubrk.sh
bash lubrk.sh
clear
cut -d, -f1,3 <<< "a,, b, c, d, e"
cut -d, -f1,3,5 <<< "a,, b, c, d, e"
clear
cut -d, -f1,3,5 <<< "a,, b, c, d, e"
LIST
cut -d ' ' -f1 chessboard
cut -d ' ' -f1,3 chessboard
cut -d ' ' -f 1-3  chessboard
7
cd ../
cd
var=Hi
func(){ local var="yes can i help you"; echo "inside func var="$var""; }
func
echo "outside func var=$var"
func
jobs
ls | grep (*.txt)
ls | grep *(*.txt)
ls | grep *(.txt)
ls | egrep (.txt)
ls | egrep .txt
ls | egrep '.txt'
cat fruit.txt
https://www.example.com/cgi-bin/script.sh?var1=Hello%world&var2=This%20is%20a%20Test.&
fg
jobs
vi eval.sh
bash eval.sh
vi eval.sh
bash eval.sh
vi eval.sh
bash eval.sh
vi eval.sh
bash eval.sh
vi eval.sh
bash eval.sh
vi eval.sh
bash eval.sh
vi eval.sh
bash eval.sh
vi eval.sh
bash eval.sh
clear
cp eval.sh evala
vi evala
bash eval
bash evala
cp evala evala.sh
rm evala
bash evala.sh
vi eval
vi eva.sh
ls
mv eva.sh evala
bash evala trapa trapc trapd
vi evala
bash evala trapa trapc trapd
vi evala
bash evala trapa trapc trapd
cat trapa trapc trapd
bash evala trapa trapc trapd
vi evala
bash evala trapa trapc trapd
vi evala
bash evala trapa trapc trapd
clear
bash evala trapa trapc trapd
clear
vi evala
bash evala trapa trapc trapd
cp evala evalb
vi evalb
bash evala trapb trapc trapd
bash evala trapa trapc trapd
bash evalb trapa trapc trapd
cat -n evalb
ifconfih
ifconfig
ifconfig -a
ifconfig eth0
ifup etho
ifup eth0
ifdown eth0
ping -c 2 8.8.8.8
traceroute
pkg insall traceroute
apt install traceroute
traceroute
netsya
netstat
ns lookup google.com
nslookup google.com
pkg install dnsutils
nslookup google.com
dig google.com
vi count.c
gcc count.c -o count1
vi count.c
gcc count.c -o count1
./count1
cat -n count
cat -n count.c
ls
file=count1
if [[ -x "$file" ]]; then e h; echo executable; else echo non-executable; fi
if [[ -x "$file" ]]; then; echo executable; else echo non-executable; fi
if [[ -x "$file" ]]; then echo executable; else echo non-executable; fi
vk 
vi eval.sh
vk
vi eeval.sh
pop chessboard
mv -i eeval.sh eval
cat -n eval
popfunc chessboard
bash popfunc
bash eval
clear
vi evalc.sh
bash evalc.sh -h
cat -n evalc.sh
mv evalc.sh evalc
sed -i '18d' evalc
bash evalc.sh -h
bash evalc -h
cat -n evalc
sed -i '18i esac' evalc
bash evalc -h
cat -n evalc
vi evalc
f 4 5
clear
-j n
clear
nl chessboard
cd trydid
cd trydir
ls
cat gresg.sh
cat greet.sh
cat greet.sh | nl | parallel --pipe --block 2k -k nl -n rz | gzip > out.gz
package install parallel
pkg install parallel
jobs
clear
pkg install parallel
apt install parallel
fg
apt install parallel
cat greet.sh | nl | parallel --pipe --block 2k -k nl -n rz | gzip > out.gz
ls
cat out.gz
catgz
gzcat out.gz
clear8
fg
arr=(1 2 3 4 5 6 7 8 9 10)
arr=(1 2 3 4 5 6 7 8 9)
arr=(1 2 3 4 5 6 7 8)
arr=(1 2 3 4 5 6 7)
arr=(1 2 3 4 5)
clear
ls
cd
jobs
clear
echo "${BASH_SOURE[0]}"
vi CD
vi ~/.bashrc
clear
soure ~/.bashrc
source ~/.bashrc
vi ~/.bashrc
source ~/.bashrc
-b LIST
clear
echo {1,2..}
echo {1..4}
echo {1 2 ..}
echo ${1 2 ..}
echo {1,3..8}
echo {1 3..8}
clear
arr=(1 2 3 4 5 6 7)
echo ${arr[@[} | rev
echo ${arr[@]} | rev
arr=(1 2 3 4 5 6 7 8 9 10)
echo ${arr[@]} | rev
clear
echo $arr
echo "${arr[@]}" >>> awk '{ for (i=NR; i > 1; --i) printf("%s", $i); print $1}'
echo "${arr[@]}" >>> awk '{ for (i=NR; i > 1; --i) printf("%s", $i); print $i}'
echo "${arr[@]}" >>> awk '{ for (i=NR; i > 1; --i) printf("%s", i); print $i}'
clear
source stat sh
source stat.sh
clear
bash lubrk
ls
bash lubrk.sh
vi lubrk.sh
source lubrk.sh
export PS1 lubrk.sh
export PS1=lubrk.sh
source stat.sh
export PROMPT_COMMAND=lunchbreak
clear
cd te2/te2a
ls
cat   CD
cat > CD
bash CD
vi CD
bash CD
vi CD
bash CD
vi CD
bash CD
vi CD
bash CD
vi CD
bash CD
vi CD
bash CD
siurce CD
source CD
vi CD
source CD
source cd
cd te2/te2a
mv cd cd_dir
source cd_dir
~~clear
cleae
clear
source stat.sh
clear
export PROMPT_COMMAND=lubrk
export PROMPT_COMMAND=lubrk.sh

export PROMPT_COMMAND=lubrk.sh/
export PROMPT_COMMAND=lunchbreak
vi p+.c
gcc p+.c -o p+
./p+
cat -n p+
cat -n p+.c
vi +p.c
vi p+.c
./p+
gcc p+.c -o p+
./p+
int a = 2;
cp p+.c p+a.c
vi p+a.c
gcc p+a.c -o p+a
./p+a
vi p+a.c
gcc p+a.c -o p+a
./p+a
cp p+a.c p+b.c
vi p+b.c
gcc p+b.c -o p+b
./p+b
ls
clear
ls -@
ls -a
cat -n .bash_history
clear
source stat.sh
clear
git clone https://github.com/attahchisom2/mastermose.tech.git
ls
cd mastermose.tech
mkdir hello_C_and_Bash
ecbho "A directory containing both bash and c code" > README.md
echo "A directory containing both bash and c code" > README.md
ls
cd hello_C_and_Bash
cat > bash_file_a
cat > C_file_a
ls
echo "This an expriment that seeks to source file code in c and bash from another directory" > README.md
ls
git add .
git commit -M "i have made a commit"
git commit -m "i have made a commit"
bash bash_file_a
source bash_file_a
git push
clear
cd
rm -r mastermose.tech
ls
cd mastermose.tech
ks
ps
ls
ls -a
cat .git
vi .git
cd .git
ls
cd objects
ls
cd oc
ls
cd 0c
ls
cd
clear
ls
ls mastermose.tech
ls globbing
clear
[200~ssh 12f928f687f8@12f928f687f8.2d6827f5.alx-cod.online~
ssh 12f928f687f8@12f928f687f8.2d6827f5.alx-cod.online
pkg install dropbear
apt install dropbear
pkg install openssh
apt install openssh
apt-get update
clear
pkg install openssh
apt install openssh
openssh -v
openssh --version
git -v
ckear
clear
ssh 12f928f687f8@12f928f687f8.2d6827f5.alx-cod.online
clear
ls
clear
ssh 12f928f687f8@12f928f687f8.2d6827f5.alx-cod.online
ls
clear
clear
ls
cp y
cp y yy
cp yy /te2/te2a/yyy_shool
cp yy te2/te2a/yyy_shool
ls te2/te2a/yyy_shool
cat te2/te2a/yyy_shool
